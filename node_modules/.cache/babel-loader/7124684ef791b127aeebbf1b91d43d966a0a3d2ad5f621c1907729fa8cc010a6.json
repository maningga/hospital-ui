{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ken\\\\Desktop\\\\skol\\\\im\\\\hospital-ui\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create a custom hook to access the context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider component to wrap around the app\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null); // user state will hold logged-in user info\n\n  const login = role => {\n    return new Promise((resolve, reject) => {\n      if (role) {\n        setUser({\n          role\n        }); // Set user state with role\n        resolve();\n      } else {\n        reject(new Error(\"Login failed\"));\n      }\n    });\n  };\n  const logout = () => {\n    setUser(null); // Clear the user state on logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","login","role","Promise","resolve","reject","Error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ken/Desktop/skol/im/hospital-ui/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// Create a custom hook to access the context\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n// AuthProvider component to wrap around the app\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null); // user state will hold logged-in user info\r\n\r\n  const login = (role) => {\r\n    return new Promise((resolve, reject) => {\r\n      if (role) {\r\n        setUser({ role }); // Set user state with role\r\n        resolve();\r\n      } else {\r\n        reject(new Error(\"Login failed\"));\r\n      }\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null); // Clear the user state on logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC,MAAMW,KAAK,GAAIC,IAAI,IAAK;IACtB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAIH,IAAI,EAAE;QACRF,OAAO,CAAC;UAAEE;QAAK,CAAC,CAAC,CAAC,CAAC;QACnBE,OAAO,CAAC,CAAC;MACX,CAAC,MAAM;QACLC,MAAM,CAAC,IAAIC,KAAK,CAAC,cAAc,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEV,IAAI;MAAEE,KAAK;MAAEM;IAAO,CAAE;IAAAV,QAAA,EAClDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,GAAA,CAvBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}